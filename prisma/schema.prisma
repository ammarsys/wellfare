// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Configuration {
  id            String  @id @default(cuid())
  darkMode      Boolean @default(false)
  reducedMotion Boolean @default(false)
  fontSize      Int     @default(16)
  User          User[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id              String        @id @default(cuid())
  name            String?
  email           String?       @unique
  emailVerified   DateTime?
  image           String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  accounts        Account[]
  sessions        Session[]
  configurations  Configuration @relation(fields: [configurationId], references: [id])
  configurationId String
  affirmations    String[]
  record          Record[]      @relation(fields: [recordId], references: [id])
  recordId        String
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Record {
  id          String   @id @default(cuid())
  date        DateTime
  description String
  contents    String
  emoji       Emoji    @relation(fields: [emojiId], references: [id])
  emojiId     String
  User        User[]
}

model Emoji {
  id          String   @id @default(cuid())
  emoji       String
  description String
  Record      Record[]
}
